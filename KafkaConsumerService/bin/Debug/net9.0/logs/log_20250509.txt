2025-05-09 12:59:03.386 +02:00 [INF] S T A R T host
2025-05-09 13:17:29.825 +02:00 [INF] S T A R T host
2025-05-09 13:17:37.879 +02:00 [INF] KafkaPollingWorker gestartet.
2025-05-09 13:17:38.514 +02:00 [INF] Starte Polling nach neuen Events...
2025-05-09 13:17:39.702 +02:00 [INF] Nachricht erfolgreich an Kafka gesendet: {"QUEUE_ID":"8E899CC3-8FD5-466E-9659-417E33579FD1","TABLE_NAME":"DISTLIST","ACTION_NAME":"INSERT","KEY_VALUE":"43d104b9-e09a-4379-a8a1-e43f5f603baa","DATA":"{\u0022DISTLISTID\u0022: \u002243d104b9-e09a-4379-a8a1-e43f5f603baa\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdas\u0022, \u0022OWNER_ID\u0022: null, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdsad\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:58:20\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:58:20\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:58:24.023","ProcessingStatus":"Pending"}
2025-05-09 13:17:39.828 +02:00 [INF] Nachricht erfolgreich an Kafka gesendet: {"QUEUE_ID":"5F4438D7-23D7-4DC4-9D7D-AA97994EDE5B","TABLE_NAME":"DISTLIST","ACTION_NAME":"UPDATE","KEY_VALUE":"43d104b9-e09a-4379-a8a1-e43f5f603baa","DATA":"{\u0022DISTLISTID\u0022: \u002243d104b9-e09a-4379-a8a1-e43f5f603baa\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdas12321321\u0022, \u0022OWNER_ID\u0022: null\u0022, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdsad123213\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:58:20\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:58:27\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022, \u0022OLD_DESCRIPTION\u0022: \u0022asdasdas\u0022, \u0022OLD_OWNER_ID\u0022: \u0022\u0022, \u0022OLD_IS_DYNAMIC\u0022: \u0022\u0022, \u0022OLD_NAME\u0022: \u0022asdsad\u0022, \u0022OLD_SELECTION_ID\u0022: \u0022\u0022, \u0022OLD_DATE_NEW\u0022: \u0022Mai  8 2025  5:58PM\u0022, \u0022OLD_DATE_EDIT\u0022: \u0022Mai  8 2025  5:58PM\u0022, \u0022OLD_USER_NEW\u0022: \u0022Voytas\u0022, \u0022OLD_USER_EDIT\u0022: \u0022Voytas\u0022, \u0022OLD_AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:58:32.16","ProcessingStatus":"Pending"}
2025-05-09 13:17:39.857 +02:00 [INF] Nachricht erfolgreich an Kafka gesendet: {"QUEUE_ID":"2273D844-C1C4-45D6-B780-4C8F37324952","TABLE_NAME":"DISTLIST","ACTION_NAME":"DELETE","KEY_VALUE":"43d104b9-e09a-4379-a8a1-e43f5f603baa","DATA":"{\u0022DISTLISTID\u0022: \u002243d104b9-e09a-4379-a8a1-e43f5f603baa\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdas12321321\u0022, \u0022OWNER_ID\u0022: null\u0022, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdsad123213\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:58:20\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:58:27\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:58:36.737","ProcessingStatus":"Pending"}
2025-05-09 13:17:39.888 +02:00 [INF] Nachricht erfolgreich an Kafka gesendet: {"QUEUE_ID":"55ADCCD1-498E-42DC-84B5-DB95A72980B1","TABLE_NAME":"DISTLIST","ACTION_NAME":"DELETE","KEY_VALUE":"e9973dc2-43d3-4a1f-87a2-9b0bd9b6b657","DATA":"{\u0022DISTLISTID\u0022: \u0022e9973dc2-43d3-4a1f-87a2-9b0bd9b6b657\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdasd\u0022, \u0022OWNER_ID\u0022: null\u0022, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdasd\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:48:33\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:48:33\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:59:10.09","ProcessingStatus":"Pending"}
2025-05-09 13:18:03.128 +02:00 [INF] Nachricht empfangen: {"QUEUE_ID":"8E899CC3-8FD5-466E-9659-417E33579FD1","TABLE_NAME":"DISTLIST","ACTION_NAME":"INSERT","KEY_VALUE":"43d104b9-e09a-4379-a8a1-e43f5f603baa","DATA":"{\u0022DISTLISTID\u0022: \u002243d104b9-e09a-4379-a8a1-e43f5f603baa\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdas\u0022, \u0022OWNER_ID\u0022: null, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdsad\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:58:20\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:58:20\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:58:24.023","ProcessingStatus":"Pending"}
2025-05-09 13:18:03.262 +02:00 [INF] Nachricht empfangen: {"QUEUE_ID":"5F4438D7-23D7-4DC4-9D7D-AA97994EDE5B","TABLE_NAME":"DISTLIST","ACTION_NAME":"UPDATE","KEY_VALUE":"43d104b9-e09a-4379-a8a1-e43f5f603baa","DATA":"{\u0022DISTLISTID\u0022: \u002243d104b9-e09a-4379-a8a1-e43f5f603baa\u0022, \u0022DESCRIPTION\u0022: \u0022asdasdas12321321\u0022, \u0022OWNER_ID\u0022: null\u0022, \u0022IS_DYNAMIC\u0022: \u0022\u0022, \u0022NAME\u0022: \u0022asdsad123213\u0022, \u0022SELECTION_ID\u0022: \u0022\u0022, \u0022DATE_NEW\u0022: \u00222025-05-08T17:58:20\u0022, \u0022DATE_EDIT\u0022: \u00222025-05-08T17:58:27\u0022, \u0022USER_NEW\u0022: \u0022Voytas\u0022, \u0022USER_EDIT\u0022: \u0022Voytas\u0022, \u0022AKTIV\u0022: \u0022Y\u0022, \u0022OLD_DESCRIPTION\u0022: \u0022asdasdas\u0022, \u0022OLD_OWNER_ID\u0022: \u0022\u0022, \u0022OLD_IS_DYNAMIC\u0022: \u0022\u0022, \u0022OLD_NAME\u0022: \u0022asdsad\u0022, \u0022OLD_SELECTION_ID\u0022: \u0022\u0022, \u0022OLD_DATE_NEW\u0022: \u0022Mai  8 2025  5:58PM\u0022, \u0022OLD_DATE_EDIT\u0022: \u0022Mai  8 2025  5:58PM\u0022, \u0022OLD_USER_NEW\u0022: \u0022Voytas\u0022, \u0022OLD_USER_EDIT\u0022: \u0022Voytas\u0022, \u0022OLD_AKTIV\u0022: \u0022Y\u0022}","EVENT_TIME":"2025-05-08T17:58:32.16","ProcessingStatus":"Pending"}
2025-05-09 13:18:03.489 +02:00 [ERR] BackgroundService failed
System.Text.Json.JsonException: '"' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 0 | BytePositionInLine: 106.
 ---> System.Text.Json.JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 0 | BytePositionInLine: 106.
   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)
   at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker)
   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()
   at System.Text.Json.Utf8JsonReader.Read()
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)
   at System.Text.Json.Serialization.Converters.JsonMetadataServicesConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)
   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value, Boolean& isPopulatedValue)
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   --- End of inner exception stack trace ---
   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, JsonReaderException ex)
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.Deserialize(Utf8JsonReader& reader, ReadStack& state)
   at System.Text.Json.JsonSerializer.ReadFromSpan[TValue](ReadOnlySpan`1 utf8Json, JsonTypeInfo`1 jsonTypeInfo, Nullable`1 actualByteCount)
   at System.Text.Json.JsonSerializer.ReadFromSpan[TValue](ReadOnlySpan`1 json, JsonTypeInfo`1 jsonTypeInfo)
   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonTypeInfo`1 jsonTypeInfo)
   at KafkaConsumerService.Factories.ModelSerializationFactory.DeserializeByModelName(String modelName, String json) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Factories\ModelSerializationFactory.cs:line 23
   at KafkaConsumerService.Strategien.MessageProcessorStrategie.ProcessAsync(String message) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Strategien\MessageProcessorStrategie.cs:line 48
   at KafkaConsumerService.Services.KafkaConsumService.ExecuteAsync(CancellationToken cancellationToken) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Services\KafkaConsumService.cs:line 49
   at Microsoft.Extensions.Hosting.Internal.Host.TryExecuteBackgroundServiceAsync(BackgroundService backgroundService)
2025-05-09 13:18:03.518 +02:00 [FTL] The HostOptions.BackgroundServiceExceptionBehavior is configured to StopHost. A BackgroundService has thrown an unhandled exception, and the IHost instance is stopping. To avoid this behavior, configure this to Ignore; however the BackgroundService will not be restarted.
System.Text.Json.JsonException: '"' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 0 | BytePositionInLine: 106.
 ---> System.Text.Json.JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 0 | BytePositionInLine: 106.
   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)
   at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker)
   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()
   at System.Text.Json.Utf8JsonReader.Read()
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)
   at System.Text.Json.Serialization.Converters.JsonMetadataServicesConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)
   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value, Boolean& isPopulatedValue)
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   --- End of inner exception stack trace ---
   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, JsonReaderException ex)
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.Deserialize(Utf8JsonReader& reader, ReadStack& state)
   at System.Text.Json.JsonSerializer.ReadFromSpan[TValue](ReadOnlySpan`1 utf8Json, JsonTypeInfo`1 jsonTypeInfo, Nullable`1 actualByteCount)
   at System.Text.Json.JsonSerializer.ReadFromSpan[TValue](ReadOnlySpan`1 json, JsonTypeInfo`1 jsonTypeInfo)
   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonTypeInfo`1 jsonTypeInfo)
   at KafkaConsumerService.Factories.ModelSerializationFactory.DeserializeByModelName(String modelName, String json) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Factories\ModelSerializationFactory.cs:line 23
   at KafkaConsumerService.Strategien.MessageProcessorStrategie.ProcessAsync(String message) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Strategien\MessageProcessorStrategie.cs:line 48
   at KafkaConsumerService.Services.KafkaConsumService.ExecuteAsync(CancellationToken cancellationToken) in C:\[SOURCE]\apano\KafkaConsumerService\KafkaConsumerService\Services\KafkaConsumService.cs:line 49
   at Microsoft.Extensions.Hosting.Internal.Host.TryExecuteBackgroundServiceAsync(BackgroundService backgroundService)
